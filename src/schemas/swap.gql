type Balance {
  confirmed: String!
  unconfirmed: String!
}

type Tokens {
  symbol: String!
  name: String!
  balance: Balance!
  icon: String!
  receiveAddress: String!
  contractAddress: String
}

type Trade {
  message: String!
  midPrice: String!
  midPriceInverted: String!
  path: String!
  liquidityProviderFee: String!
  liquidityProviderFeePercent: Float!
  tradeExpires: Float!
}

type Confirmation {
  message: String
}

type Query {
  swapParams(coinSymbol: String): [Tokens!]!
}

type Mutation {
  startSwap(
    coinSymbol: String!
    amount: String!
    inputToken: String!
    outputToken: String!
  ): Trade
  confirmSwap(
    coinSymbol: String!
    amount: String!
    inputToken: String!
    outputToken: String!
    walletPassword: String!
  ): Confirmation
}
