type Balance {
  confirmed: String!
  unconfirmed: String!
}

type FeeEstimate {
  estimatedFee: String!
  feeCurrency: String!
  feeCurrencyBalance: String!
}

type Tokens {
  symbol: String!
  name: String!
  balance: Balance!
  icon: String!
  receiveAddress: String!
  feeEstimate: FeeEstimate!
  contractAddress: String
  chainId: Int!
  decimalPlaces: Int!
}

type Receipt {
  message: String!
  midPrice: String!
  midPriceInverted: String!
}

type Confirmation {
  message: String
}

input InputToken {
  #INPUT token
  chainId: Int!
  decimals: Int!
  symbol: String
  name: String
  address: String!
}

input OutputToken {
  #OUTPUT token
  chainId: Int!
  decimals: Int!
  symbol: String
  name: String
  address: String!
}

type Query {
  swapParams(coinSymbol: String): [Tokens!]!
}

type Mutation {
  startSwap(
    amount: String!
    inputToken: [InputToken!]!
    outputToken: [OutputToken!]!
  ): Receipt
  confirmSwap(coinSymbol: String!): Confirmation
}
