# type CartAddress {
#   coinSymbol: String
#   address: String
#   qrCode: String
# }

type PricingCartAddres {
  amountUsd: Float!
  amountCrypto: Float!
  quantity: Int!
}

type CartAddress {
  coinSymbol: String!
  address: String!
  qrCode: String!
  pricing: PricingCartAddres!
}

type CartAddressRequest {
  userId: String!
  coinSymbol: String!
  amountUsd: String!
  amountCrypto: String!
  quantity: Int!
  orderId: String!
  affiliateId: String
  affiliateSessionId: String
  utmVariables: String
  created: Date!
  expires: Date!
  addresses: [CartAddress!]!
}

type CartTransaction {
  wp_id: String
  status: String
  currency: String
  discountAmtUsd: String
  totalUsd: String
  totalCrypto: String
  conversionRate: String
  remainingCrypto: String
  address: String
  name: String
  email: String
  data: String!
  created: Date
}

type CartOrderStatusResponse {
  success: String!
  expires: String!
  amtToPayUSD: String
  amtToPayCrypto: String
  amtToPayRemaining: String
  message: String!
  status: String!
}

type Query {
  getAllCartAddressRequests: [CartAddressRequest!]!
  getAllCartTransactions: [CartTransaction!]!
  getCartOrderStatus(
    orderId: String!
    orderType: String!
    coinSymbol: String!
  ): CartOrderStatusResponse
}

type Mutation {
  getCartAddress(
    coinSymbol: String!
    orderId: String!
    # This is currently a crypto amount.
    # This value will be removed in the future when
    # we finish testing and moving to a new version of the cart.
    # we keep the current name instead of change it to amountCrypto
    # to avoid any broke.
    amount: String
    affiliateId: String
    affiliateSessionId: String
    utmVariables: String
    # The amount used will be in USD
    amountUsd: String
    #quantity > 0
    quantity: Int! = 1
  ): [CartAddress]!
  sendCartTransaction(
    coinSymbol: String!
    orderId: String!
    amount: String
    walletPassword: String!
    affiliateId: String
    affiliateSessionId: String
    utmVariables: String
    amountUsd: String
    #quantity > 0
    quantity: Int! = 1
  ): TxSendResponse!
}
