type Balance {
  confirmed: String!
  unconfirmed: String!
}

type Transaction {
  id: ID!
  status: String!
  confirmations: Int!
  timestamp: Int!
  fee: String!
  link: String!
  to: String!
  from: String!
  amount: String!
  type: String!
  total: String!
}

type Wallet {
  symbol: String!
  name: String!
  balance: Balance!
  icon: String!
  backgroundColor: String!
  receiveAddress: String!
  transactions: [Transaction!]!
  feeEstimate: Float!
}

type Query {
  # If no coinSymbol is provided, all supported wallets will be returned
  wallet(coinSymbol: String): [Wallet!]!
}

type TransactionResponse {
  success: Boolean!
  message: String
}

type Mutation {
  # If no coinSymbol is provided, all supported wallets will be returned
  sendTransaction(
    coinSymbol: String
    to: String!
    amount: String!
    totpToken: String!
  ): TransactionResponse!
}
