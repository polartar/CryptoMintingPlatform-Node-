input IamAuthenticateInput {
  username: String!
  password: String!
  context: JSON
}

type IamAuthentication {
  type: String # bearer
  token: String # typically
}

type IamAuthenticateResponse {
  success: Boolean!
  message: String!
  principal: IamPrincipal
  authentication: IamAuthentication
  metadata: JSON
}

type IamPrincipal {
  id: ID!
  uid: ID!
  username: String
  email: String
  displayName: String
  firstName: String
  lastName: String
  role: String
  photoUrl: String
}

type Iam {
  principal: IamPrincipal
}

type IamOps {
  authenticate(input: IamAuthenticateInput): IamAuthenticateResponse
}

extend type Query {
  iam: Iam
}

extend type Mutation {
  iam: IamOps
}
