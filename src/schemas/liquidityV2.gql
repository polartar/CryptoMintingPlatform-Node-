type pairParams {
  pairAddress: String!
  message: String!
}

type pairInfo {
  message: String!
  reserve0: String!
  reserve1: String!
  liquidity: String!
}

type tokenApprove {
  message: String!
  created: Boolean!
}

type liquidityAdd {
  message: String!
}

type liquidityRem {
  message: String!
  amountA: String
  amountB: String
}

type Query {
  getPairInfo(
    coinSymbol0: String!
    coinSymbol1: String!
    walletPassword: String!
  ): pairInfo
}

type Mutation {
  createPair(
    walletPassword: String!
    coinSymbol0: String!
    coinSymbol1: String!
  ): pairParams
  approveTokens(walletPassword: String!, coinSymbol0: String!): tokenApprove
  addLiquidityV2(
    coinSymbol0: String!
    coinSymbol1: String!
    amountADesired: Int!
    amountBDesired: Int!
    walletPassword: String!
  ): liquidityAdd
  remLiquidityV2(
    coinSymbol0: String!
    coinSymbol1: String!
    walletPassword: String!
    percentage: Int!
  ): liquidityRem
}
